import React from "react";
import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  TextInput,\n  Modal\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Stack } from 'expo-router';\nimport {\n  Bell,\n  Send,\n  MessageSquare,\n  Settings,\n  Phone,\n  Mail,\n  Users,\n  TrendingUp,\n  Calendar,\n  Filter\n} from 'lucide-react-native';\nimport { KurdishText } from '@/components/KurdishText';\nimport { NotificationManager } from '@/components/NotificationManager';\nimport { GradientCard } from '@/components/GradientCard';\n\ninterface QuickAction {\n  id: string;\n  title: string;\n  description: string;\n  icon: React.ComponentType<any>;\n  color: string;\n  action: () => void;\n}\n\ninterface NotificationStats {\n  totalSent: number;\n  deliveryRate: number;\n  todaySent: number;\n  thisWeekSent: number;\n  channels: {\n    sms: number;\n    email: number;\n    whatsapp: number;\n    viber: number;\n  };\n}\n\nexport default function NotificationManagementPage() {\n  const [showNotificationManager, setShowNotificationManager] = useState(false);\n  const [showQuickSend, setShowQuickSend] = useState(false);\n  const [selectedChannel, setSelectedChannel] = useState<'sms' | 'email' | 'whatsapp'>('sms');\n  const [quickMessage, setQuickMessage] = useState('');\n  const [recipient, setRecipient] = useState('');\n\n  // Mock data - in real app, fetch from API\n  const stats: NotificationStats = {\n    totalSent: 4290,\n    deliveryRate: 94.2,\n    todaySent: 156,\n    thisWeekSent: 892,\n    channels: {\n      sms: 1250,\n      email: 890,\n      whatsapp: 2150,\n      viber: 890\n    }\n  };\n\n  const quickActions: QuickAction[] = [\n    {\n      id: 'send_sms',\n      title: 'ناردنی SMS',\n      description: 'ناردنی پەیامی خێرا بە SMS',\n      icon: Phone,\n      color: '#4CAF50',\n      action: () => {\n        setSelectedChannel('sms');\n        setShowQuickSend(true);\n      }\n    },\n    {\n      id: 'send_email',\n      title: 'ناردنی ئیمەیڵ',\n      description: 'ناردنی ئیمەیڵی خێرا',\n      icon: Mail,\n      color: '#2196F3',\n      action: () => {\n        setSelectedChannel('email');\n        setShowQuickSend(true);\n      }\n    },\n    {\n      id: 'send_whatsapp',\n      title: 'ناردنی واتساپ',\n      description: 'ناردنی پەیامی واتساپ',\n      icon: MessageSquare,\n      color: '#FF9800',\n      action: () => {\n        setSelectedChannel('whatsapp');\n        setShowQuickSend(true);\n      }\n    },\n    {\n      id: 'bulk_notification',\n      title: 'ئاگاداری گشتی',\n      description: 'ناردنی پەیام بۆ چەندین کەس',\n      icon: Users,\n      color: '#9C27B0',\n      action: () => setShowNotificationManager(true)\n    },\n    {\n      id: 'view_stats',\n      title: 'ئامارەکان',\n      description: 'بینینی ئامارەکانی ئاگاداری',\n      icon: TrendingUp,\n      color: '#FF5722',\n      action: () => setShowNotificationManager(true)\n    },\n    {\n      id: 'schedule',\n      title: 'ئاگاداری کاتی',\n      description: 'دانانی ئاگاداری بۆ کاتی دیاریکراو',\n      icon: Calendar,\n      color: '#607D8B',\n      action: () => setShowNotificationManager(true)\n    }\n  ];\n\n  const recentNotifications = [\n    {\n      id: '1',\n      type: 'debt_reminder',\n      recipient: 'ئەحمەد محەمەد',\n      channel: 'SMS',\n      status: 'delivered',\n      timestamp: '10:30 ص',\n      message: 'یادەوەری قەرز - 150,000 دینار'\n    },\n    {\n      id: '2',\n      type: 'payment_confirmation',\n      recipient: 'فاتمە ئەحمەد',\n      channel: 'WhatsApp',\n      status: 'delivered',\n      timestamp: '09:45 ص',\n      message: 'پشتڕاستکردنەوەی پارەدان - 75,000 دینار'\n    },\n    {\n      id: '3',\n      type: 'receipt',\n      recipient: 'عەلی حەسەن',\n      channel: 'Email',\n      status: 'sent',\n      timestamp: '09:15 ص',\n      message: 'وەسڵی پارەدان - #R001234'\n    },\n    {\n      id: '4',\n      type: 'high_debt_warning',\n      recipient: 'سارا محەمەد',\n      channel: 'SMS',\n      status: 'failed',\n      timestamp: '08:30 ص',\n      message: 'ئاگاداری قەرزی زۆر - 500,000 دینار'\n    }\n  ];\n\n  const handleQuickSend = () => {\n    if (!quickMessage.trim() || !recipient.trim()) {\n      return;\n    }\n\n    console.log('Quick send:', {\n      channel: selectedChannel,\n      recipient,\n      message: quickMessage\n    });\n\n    // Reset form\n    setQuickMessage('');\n    setRecipient('');\n    setShowQuickSend(false);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'delivered': return '#4CAF50';\n      case 'sent': return '#FF9800';\n      case 'failed': return '#F44336';\n      default: return '#666';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'delivered': return 'گەیشتووە';\n      case 'sent': return 'نێردراوە';\n      case 'failed': return 'شکستخواردووە';\n      default: return status;\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Stack.Screen \n        options={{\n          title: 'بەڕێوەبردنی ئاگاداری',\n          headerStyle: { backgroundColor: '#007AFF' },\n          headerTintColor: '#fff',\n          headerTitleStyle: { fontWeight: 'bold' }\n        }} \n      />\n\n      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>\n        {/* Stats Overview */}\n        <View style={styles.statsContainer}>\n          <GradientCard\n            colors={['#4CAF50', '#45A049']}\n            style={styles.statCard}\n          >\n            <View style={styles.statContent}>\n              <Bell size={32} color=\"#fff\" />\n              <View style={styles.statText}>\n                <Text style={styles.statNumber}>{stats.totalSent.toLocaleString()}</Text>\n                <KurdishText style={styles.statLabel}>کۆی ئاگاداری</KurdishText>\n              </View>\n            </View>\n          </GradientCard>\n\n          <GradientCard\n            colors={['#2196F3', '#1976D2']}\n            style={styles.statCard}\n          >\n            <View style={styles.statContent}>\n              <TrendingUp size={32} color=\"#fff\" />\n              <View style={styles.statText}>\n                <Text style={styles.statNumber}>{stats.deliveryRate}%</Text>\n                <KurdishText style={styles.statLabel}>ڕێژەی سەرکەوتن</KurdishText>\n              </View>\n            </View>\n          </GradientCard>\n        </View>\n\n        <View style={styles.statsContainer}>\n          <GradientCard\n            colors={['#FF9800', '#F57C00']}\n            style={styles.statCard}\n          >\n            <View style={styles.statContent}>\n              <Calendar size={32} color=\"#fff\" />\n              <View style={styles.statText}>\n                <Text style={styles.statNumber}>{stats.todaySent}</Text>\n                <KurdishText style={styles.statLabel}>ئەمڕۆ</KurdishText>\n              </View>\n            </View>\n          </GradientCard>\n\n          <GradientCard\n            colors={['#9C27B0', '#7B1FA2']}\n            style={styles.statCard}\n          >\n            <View style={styles.statContent}>\n              <Filter size={32} color=\"#fff\" />\n              <View style={styles.statText}>\n                <Text style={styles.statNumber}>{stats.thisWeekSent}</Text>\n                <KurdishText style={styles.statLabel}>ئەم هەفتەیە</KurdishText>\n              </View>\n            </View>\n          </GradientCard>\n        </View>\n\n        {/* Quick Actions */}\n        <View style={styles.section}>\n          <KurdishText style={styles.sectionTitle}>کردارە خێراکان</KurdishText>\n          <View style={styles.quickActions}>\n            {quickActions.map((action) => {\n              const IconComponent = action.icon;\n              return (\n                <TouchableOpacity\n                  key={action.id}\n                  style={styles.quickActionCard}\n                  onPress={action.action}\n                >\n                  <View style={[styles.quickActionIcon, { backgroundColor: action.color }]}>\n                    <IconComponent size={24} color=\"#fff\" />\n                  </View>\n                  <KurdishText style={styles.quickActionTitle}>{action.title}</KurdishText>\n                  <Text style={styles.quickActionDescription}>{action.description}</Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n        </View>\n\n        {/* Channel Stats */}\n        <View style={styles.section}>\n          <KurdishText style={styles.sectionTitle}>ئامارەکانی کەناڵەکان</KurdishText>\n          <View style={styles.channelStats}>\n            <View style={styles.channelStat}>\n              <View style={styles.channelIcon}>\n                <Phone size={20} color=\"#4CAF50\" />\n              </View>\n              <View style={styles.channelInfo}>\n                <Text style={styles.channelName}>SMS</Text>\n                <Text style={styles.channelCount}>{stats.channels.sms.toLocaleString()}</Text>\n              </View>\n            </View>\n\n            <View style={styles.channelStat}>\n              <View style={styles.channelIcon}>\n                <Mail size={20} color=\"#2196F3\" />\n              </View>\n              <View style={styles.channelInfo}>\n                <Text style={styles.channelName}>Email</Text>\n                <Text style={styles.channelCount}>{stats.channels.email.toLocaleString()}</Text>\n              </View>\n            </View>\n\n            <View style={styles.channelStat}>\n              <View style={styles.channelIcon}>\n                <MessageSquare size={20} color=\"#FF9800\" />\n              </View>\n              <View style={styles.channelInfo}>\n                <Text style={styles.channelName}>WhatsApp</Text>\n                <Text style={styles.channelCount}>{stats.channels.whatsapp.toLocaleString()}</Text>\n              </View>\n            </View>\n\n            <View style={styles.channelStat}>\n              <View style={styles.channelIcon}>\n                <MessageSquare size={20} color=\"#9C27B0\" />\n              </View>\n              <View style={styles.channelInfo}>\n                <Text style={styles.channelName}>Viber</Text>\n                <Text style={styles.channelCount}>{stats.channels.viber.toLocaleString()}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        {/* Recent Notifications */}\n        <View style={styles.section}>\n          <View style={styles.sectionHeader}>\n            <KurdishText style={styles.sectionTitle}>ئاگاداری نوێکان</KurdishText>\n            <TouchableOpacity onPress={() => setShowNotificationManager(true)}>\n              <Text style={styles.viewAllText}>بینینی هەموو</Text>\n            </TouchableOpacity>\n          </View>\n          \n          <View style={styles.notificationsList}>\n            {recentNotifications.map((notification) => (\n              <View key={notification.id} style={styles.notificationItem}>\n                <View style={styles.notificationContent}>\n                  <View style={styles.notificationHeader}>\n                    <KurdishText style={styles.notificationRecipient}>\n                      {notification.recipient}\n                    </KurdishText>\n                    <Text style={styles.notificationTime}>{notification.timestamp}</Text>\n                  </View>\n                  <Text style={styles.notificationMessage}>{notification.message}</Text>\n                  <View style={styles.notificationFooter}>\n                    <Text style={styles.notificationChannel}>{notification.channel}</Text>\n                    <Text style={[styles.notificationStatus, { color: getStatusColor(notification.status) }]}>\n                      {getStatusText(notification.status)}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n            ))}\n          </View>\n        </View>\n\n        {/* Advanced Features Button */}\n        <TouchableOpacity\n          style={styles.advancedButton}\n          onPress={() => setShowNotificationManager(true)}\n        >\n          <Settings size={24} color=\"#fff\" />\n          <KurdishText style={styles.advancedButtonText}>تایبەتمەندی پێشکەوتوو</KurdishText>\n        </TouchableOpacity>\n      </ScrollView>\n\n      {/* Quick Send Modal */}\n      <Modal\n        visible={showQuickSend}\n        animationType=\"slide\"\n        presentationStyle=\"pageSheet\"\n        onRequestClose={() => setShowQuickSend(false)}\n      >\n        <SafeAreaView style={styles.modalContainer}>\n          <View style={styles.modalHeader}>\n            <KurdishText style={styles.modalTitle}>\n              ناردنی {selectedChannel === 'sms' ? 'SMS' : selectedChannel === 'email' ? 'ئیمەیڵ' : 'واتساپ'}\n            </KurdishText>\n            <TouchableOpacity onPress={() => setShowQuickSend(false)}>\n              <Text style={styles.cancelButton}>پاشگەزبوونەوە</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.modalContent}>\n            <View style={styles.inputGroup}>\n              <KurdishText style={styles.inputLabel}>وەرگر</KurdishText>\n              <TextInput\n                style={styles.input}\n                placeholder={selectedChannel === 'email' ? 'ئیمەیڵ' : 'ژمارەی تەلەفۆن'}\n                value={recipient}\n                onChangeText={setRecipient}\n                keyboardType={selectedChannel === 'email' ? 'email-address' : 'phone-pad'}\n              />\n            </View>\n\n            <View style={styles.inputGroup}>\n              <KurdishText style={styles.inputLabel}>پەیام</KurdishText>\n              <TextInput\n                style={[styles.input, styles.messageInput]}\n                placeholder=\"پەیامەکەت لێرە بنووسە...\"\n                value={quickMessage}\n                onChangeText={setQuickMessage}\n                multiline\n                numberOfLines={4}\n                textAlignVertical=\"top\"\n              />\n            </View>\n\n            <TouchableOpacity\n              style={[styles.sendButton, (!quickMessage.trim() || !recipient.trim()) && styles.sendButtonDisabled]}\n              onPress={handleQuickSend}\n              disabled={!quickMessage.trim() || !recipient.trim()}\n            >\n              <Send size={20} color=\"#fff\" />\n              <KurdishText style={styles.sendButtonText}>ناردن</KurdishText>\n            </TouchableOpacity>\n          </View>\n        </SafeAreaView>\n      </Modal>\n\n      {/* Notification Manager Modal */}\n      <Modal\n        visible={showNotificationManager}\n        animationType=\"slide\"\n        presentationStyle=\"fullScreen\"\n        onRequestClose={() => setShowNotificationManager(false)}\n      >\n        <NotificationManager onClose={() => setShowNotificationManager(false)} />\n      </Modal>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  content: {\n    flex: 1,\n    padding: 16\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    gap: 12,\n    marginBottom: 16\n  },\n  statCard: {\n    flex: 1,\n    borderRadius: 12,\n    padding: 16\n  },\n  statContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12\n  },\n  statText: {\n    flex: 1\n  },\n  statNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 4\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#fff',\n    opacity: 0.9\n  },\n  section: {\n    marginBottom: 24\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  viewAllText: {\n    fontSize: 14,\n    color: '#007AFF'\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12\n  },\n  quickActionCard: {\n    width: '48%',\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  quickActionIcon: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  quickActionTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 4,\n    textAlign: 'center'\n  },\n  quickActionDescription: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center',\n    lineHeight: 16\n  },\n  channelStats: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  channelStat: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0'\n  },\n  channelIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#f5f5f5',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12\n  },\n  channelInfo: {\n    flex: 1\n  },\n  channelName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 2\n  },\n  channelCount: {\n    fontSize: 14,\n    color: '#666'\n  },\n  notificationsList: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  notificationItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0'\n  },\n  notificationContent: {\n    padding: 16\n  },\n  notificationHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  notificationRecipient: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333'\n  },\n  notificationTime: {\n    fontSize: 12,\n    color: '#666'\n  },\n  notificationMessage: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8,\n    lineHeight: 20\n  },\n  notificationFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  notificationChannel: {\n    fontSize: 12,\n    color: '#007AFF',\n    backgroundColor: '#f0f8ff',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12\n  },\n  notificationStatus: {\n    fontSize: 12,\n    fontWeight: '600'\n  },\n  advancedButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#007AFF',\n    borderRadius: 12,\n    padding: 16,\n    gap: 8,\n    marginBottom: 32\n  },\n  advancedButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  cancelButton: {\n    fontSize: 16,\n    color: '#007AFF'\n  },\n  modalContent: {\n    flex: 1,\n    padding: 16\n  },\n  inputGroup: {\n    marginBottom: 20\n  },\n  inputLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 8\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    paddingVertical: 12,\n    backgroundColor: '#fff',\n    fontSize: 16\n  },\n  messageInput: {\n    height: 100,\n    textAlignVertical: 'top'\n  },\n  sendButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#4CAF50',\n    borderRadius: 8,\n    padding: 16,\n    gap: 8,\n    marginTop: 20\n  },\n  sendButtonDisabled: {\n    backgroundColor: '#ccc'\n  },\n  sendButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#fff'\n  }\n});